openapi: 3.0.0
info:
  title: Dokumentasi
  version: v1
servers:
  - url: http://localhost:8080/api/v1
  - url: https://skripsi-245802795341.asia-southeast2.run.app/api/v1
tags:
  - name: users
    description: users
  - name : kursus
    description: kursus
  - name : transaksi
    description: transaksi
paths:
  /register:
    post:
      tags:
        - users
      summary: Register User
      description: User register, setiap field harus terisi, kalo kosong response nya bad request
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - nomor_hp
                - email
                - password
                - confirm_password
              properties:
                username:
                  type: string
                nomor_hp:
                  type: string
                email:
                  type: string
                password:
                  type: string
                confirm_password:
                  type: string
              example:
                username: test
                nomor_hp: 012345678911
                email: testing@test.com
                password: test123
                confirm_password: test123
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    properties:
                      token:
                        type: string
              example:
                status: true
                message: Register Success
                data: null
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                Empty Field:
                  value:
                    status: false
                    message: <Field> cannot be empty
                    data: null
                Bad Input:
                  value:
                    status: false
                    message: Format data not valid
                    data: null
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  errorType:
                    type: string
                  data:
                    type: array
              examples:
                Email Exist:
                  value:
                    status: false
                    message: Email already exists
                    data: null
                Username Exist:
                  value:
                    status: false
                    message: Username already exists
                    data: null 
  /login:
    post:
      tags:
        - users
      summary: Login User
      description: login register, setiap field harus terisi, kalo kosong response nya bad request
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
              example:
                email: testing@test.com
                password: test123
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    properties:
                      token:
                        type: string
              example:
                status: true
                message: Login Success
                data: null
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                Empty Field:
                  value:
                    status: false
                    message: <Field> cannot be empty
                    data: null
                Bad Input:
                  value:
                    status: false
                    message: Format data not valid
                    data: null
  /forgot:
    post:
      tags:
        - users
      summary: Forgot Password User
      description: proses permintaan lupa password
      operationId: forgot
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
              example:
                email: testing@test.com
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    properties:
                      token:
                        type: string
              example:
                status: true
                message: Success
                data: null
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                Empty Field:
                  value:
                    status: false
                    message: <Field> cannot be empty
                    data: null
                Bad Input:
                  value:
                    status: false
                    message: Format data not valid
                    data: null
  /otp:
    post:
      tags:
        - users
      summary: OTP Forgot Password
      description: OTP Forgot Password, setelah diberikan pesan email yang berisi digit angka OTP 
      operationId: otp
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - otp
              properties:
                otp:
                  type: string
              example:
                otp: 12345
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    properties:
                      token:
                        type: string
              example:
                status: true
                message: Success
                data: null
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              example:
                status: false
                message: <Field> cannot be empty
                data: null
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  status: false
                  message: Email not Found
                  data: null
  /reset:
    post:
      tags:
        - users
      summary: reset password User
      description: reset password user, setelah berhasil memberikan kode otp
      operationId: reset
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - password
                - confirm_password
              properties:
                password:
                  type: string
                confirm_password:
                  type: string
              example:
                confirm_password: test123
                password: test123
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    properties:
                      token:
                        type: string
              example:
                status: true
                message: Success
                data: null
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                Empty Field:
                  value:
                    status: false
                    message: <Field> cannot be empty
                    data: null
                Bad Input:
                  value:
                    status: false
                    message: Format data not valid
                    data: null
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  status: false
                  message: Email not Found
                  data: null
  /kursus:
    get:
      tags:
        - kursus
      summary: Menampilkan seluruh data kursus
      description: Menampilkan seluruh data kursus
      operationId: getkursus
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        nama:
                          type: string
                        deskripsi:
                          type: string
                        image: 
                          type: array
                          items: 
                            type: object
                            properties:
                              nama: 
                                type: string
                              url:
                                type: string
                              position:
                                type: integer
                        harga:
                          type: integer
                        jadwal:
                          type: array
                          items: 
                            type: object
                            properties:
                              hari: 
                                type: string
                              jam_mulai:
                                type: string
                              jam_selesai:
                                type: string
                example:
                  status: true
                  message: Get kursus Success
                  metadata: 
                    type: a
                  data:
                    - id: "86265355-f2a4-4acd-8195-6e56de7aba56"
                      nama: "Corel"
                      deskripsi: "Corel"
                      image:
                        - nama: "Corel"
                          url: "https://test.com"
                          position: 1
                        - nama: "Corel"
                          url: "https://test2.com"
                          position: 2
                      harga: 1500000
                      jadwal:
                        - hari: "Senin"
                          jam_mulai: "16:00"
                          jam_selesai: "18:00"
                        - hari: "Selasa"
                          jam_mulai: "16:00"
                          jam_selesai: "18:00"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  status: false
                  message: Unauthorized
                  data: null
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                example:
                  status: false
                  message: User not found
                  data: null

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []